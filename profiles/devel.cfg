[buildout]
extends =
	base.cfg
	sources.cfg
parts +=
    	nginx
    	nginx.conf
	insider.conf
	api.proxy.conf
    	config.json
    	config_insider.json
	openprocurement.auction.js
	openprocurement.auction.insider-js

show-picked-versions = true


[scripts]
eggs +=
	nose
	pytest
	pytest-mock
	pytest-cov
	openprocurement.auction[test]


[auction_worker_defaults.yaml]
AUCTIONS_URL = http://localhost:8090/auctions/{auction_id}
OAUTH_BASE_URL = http://localhost:${ports:3}/api/
OAUTH_REQUEST_TOKEN_URL =
OAUTH_ACCESS_TOKEN_URL = http://localhost:${ports:3}/oauth/token
OAUTH_AUTHORIZE_URL = http://localhost:${ports:3}/oauth/authorize
WORKER_BIND_IP = localhost

[auction_worker_insider.yaml]
AUCTIONS_URL = http://localhost:8090/auctions/{auction_id}
OAUTH_BASE_URL = http://localhost:${ports:3}/api/
OAUTH_REQUEST_TOKEN_URL =
OAUTH_ACCESS_TOKEN_URL = http://localhost:${ports:3}/oauth/token
OAUTH_AUTHORIZE_URL = http://localhost:${ports:3}/oauth/authorize
WORKER_BIND_IP = localhost

[auctions_chronograph.yaml]
web_app = localhost:${ports:4}

[auctions.ini]
external_couch_url = http://localhost:${ports:1}/auction


[npm]
recipe = metapensiero.recipe.script:shell
package = 
install =
	cd ${buildout:directory}/src/${:package}
	npm install .
	./node_modules/.bin/bower install -y bower.json
	gulp

[openprocurement.auction.js]
<= npm
package = openprocurement.auction.js


[openprocurement.auction.insider-js]
<= npm
package = openprocurement.auction.insider-js


[gulp-config]
recipe = sact.recipe.jinjatemplate
template-file = profiles/templates/config.json
package = 
target-file = src/${:package}/config.json


[config_insider.json]
<= gulp-config
package = openprocurement.auction.insider-js
app_script = insider.js
main_css = insider.css
name = insider
with_index =
with_archive = 


[config.json]
<= gulp-config
package = openprocurement.auction.js
app_script = auction.js
main_css = bundle.css
name = tender
with_index = 1
with_archive = 1


[project]
tenders_api_url = http://127.0.0.1:6543/
tenders_api_version = 2.3
tenders_api_token = auction
with_penstock =
with_data_bridge =
with_chronograph = 1
worker_sandbox_mode = 1


[auctions_chronograph.yaml]
use_consul = False


[start_replication_script]
target = http://${project:couchdb_admin}:${project:couchdb_password}@${project:couchdb_host}:${ports:0}/auctions_secured
source = http://${project:couchdb_admin}:${project:couchdb_password}@${project:couchdb_host}:${ports:0}/${project:auctions_couchdb_databese_name}
db_url = http://${project:couchdb_admin}:${project:couchdb_password}@${project:couchdb_host}:${ports:0}/_replicate


[nginx]
recipe = zc.recipe.cmmi
url = http://nginx.org/download/nginx-1.13.3.tar.gz
extra_options =
    --conf-path=${buildout:directory}/etc/nginx/nginx.conf
    --error-log-path=${buildout:directory}/var/log/nginx-error.log
    --http-log-path=${buildout:directory}/var/log/nginx-access.log
    --pid-path=${buildout:directory}/var/run/nginx.pid
    --lock-path=${buildout:directory}/var/lock/nginx.lock
    --prefix=${buildout:directory}/bin


[nginx.conf]
<= config-from-template
server_name = "auction"
port = 8090
root = ${buildout:directory}/parts
static_path = static
auctions_path = auctions
html_index = index.html
html_archive = archive.html
html_main = tender.html
plugins = insider


[insider.conf]
<= config-from-template
static_path = insider/static
auctions_url = insider-auctions
html_main = insider/tender.html

[api.proxy.conf]
<= config-from-template
